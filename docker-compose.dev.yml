version: '3.8'

services:
  # Application service
  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
      args:
        NODE_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - node_modules:/app/node_modules
      - ./docs:/app/docs
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://postgres:postgres@db:5432/app_dev
      - REDIS_URL=redis://redis:6379
      - CUSTOMER_ID=development
      - MERMAIDFLOW_URL=http://mermaidflow:5000
    depends_on:
      - db
      - redis
      - mermaidflow
    restart: unless-stopped

  # Database service
  db:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/db/init:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app_dev
    restart: unless-stopped

  # Redis service for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Nginx service for routing
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/dev.conf:/etc/nginx/conf.d/default.conf
      - ./public:/app/public
    depends_on:
      - app
      - mermaidflow
    restart: unless-stopped
    
  # MermaidFlow service
  mermaidflow:
    build:
      context: .
      dockerfile: docker/mermaidflow/Dockerfile
    ports:
      - "5000:5000"  # MCP Server
      - "8000:8000"  # FastAPI server (if needed)
    volumes:
      - ./projects/example:/app
      - ./docs:/app/docs
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - DATABASE_URL=postgres://mermaidflow:mermaidflow_password@db:5432/mermaidflow
      - HOST=0.0.0.0
    depends_on:
      - db
    restart: unless-stopped

  # New documentation service
  docs:
    build:
      context: .
      dockerfile: docker/docs/Dockerfile
    ports:
      - "8080:8000"
    volumes:
      - ./docs:/docs
    depends_on:
      - app

volumes:
  postgres_data:
  redis_data:
  node_modules: 